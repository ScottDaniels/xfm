# build pfm --  an {x)}m component which reads {x}fm source and generates postscript output.
#

# prefer ksh; might work with bash
# some flavours of mk override MKSHELL, so we'll set and hope and use
# PSHELL (preferred shell) if we must be sure
MKSHELL = `which ksh 2>/dev/null || which bash`
PSHELL = `which ksh 2>/dev/null || which bash`

# these must be set before master is pulled in
#
ALL = libraries pfm
INSTALL =
SCDSRC = 
gflag=

< ../master.mk

NUKE = $NUKE pfm init_ps.c

IFLAGS = -I. -I ../hfm -I ../base -I ../lib

pfmlib = libpfm$gflag.a

libraries:N: pfm $pfmlib

libs = -L../afileio -lafi
libs = -L . -lpfm${gflag:-} -L../base -lxfm${gflag:-} -L../afileio -lafi${gflag:-}

# source for the lib
src = fmaddtok fmasis fmbd fmbeglst fmbox fmbxend fmbxst \
	fmccol fmcd fmceject fmcmd fmcpage  \
	fmditem fmdummy fmendlis fmep fmfigure fmflush fmfmt \
	fmformat fmgetpts fmheader fmimbed fmindent fminit fmjustif \
	fmline fmnofmt fmoneject fmpflush  \
	fmrfoot fmright fmrun fmrunout fmsetcolour fmsetfon \
	fmsetstr fmsetx fmsety fmspace fmstate fmtable fmtc \
	fmtmpfon fmtmpy fmtoc fmtoksiz fmtopmar fmvartok \
	fmsection fmcolnotes

csrc = ${src:%=%.c}

obj = ${src:%=%.o}

init_ps.c:: init.ps
	sed -r 's/[\t]/ /g; s/ [ ]+ / /g; s/[ \t]*%.*//; /^$/d' init.ps| awk '
	function p() { print "AFIwrite( ofile, \"" s "\\n\" );"; } 
	{ s = s " " $0; if(length(s) >= 128) { p(); s="";} }END{ p() }' >init_ps.c

pfmproto.h: ${src:%=%.c}
	set +e						# MUST have this or first grep that 'fails' aborts the run
	echo "/* WARNING: automatically generated by mk; do NOT edit! */" >pfmproto.h
	for x in ${csrc}; do egrep "^void|^int|^char|^long" ${x:-foo}; done |grep "PFM.*(.*)" |  sort -k 2,2 | sed 's/( )/( void )/; s/).*/);/' >>pfmproto.h


fminit.o:: init_ps.c

$pfmlib(%.o):N:    %.o
$pfmlib:    ${src:%=$pfmlib(%.o)} 
	$PSHELL '(
	set -e
	names="${newprereq//$pfmlib\(}"					# pluck off lib.*( from each in newprereq
	ar r $pfmlib ${names//\)/} && rm ${names//\)/}	# archive and remove after ditching trailing ) from each name
	ranlib $pfmlib || true
	)'

pfm:	pfmproto.h fmmain.c $pfmlib ../base/libxfm$gflag.a
	$CC $CFLAGS $IFLAGS -o pfm fmmain.c $libs 
