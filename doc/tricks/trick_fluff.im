.** fluffy image stuff

.h2 Images Next To Text
To add an icon next to text, as in a warning box (illustrated below), create a table and put the 
icon in the first cell of the table, and the text in the second cell.  
If you want just the outline of the box, you'll need to build an unlined table inside of
a single cell table with edges turned on.  (If you attempt to create a table inside of a box
each time the table starts a new cell, the bottom of the box is drawn which has 
unpleasing results.) 
.gv fig
.dv alert_fig &_fig
Figure &alert_fig contains the small amount of code which is necessary to produce the 
alert box illustrated in figure .ev [ &_alert_fig 1 + ]

.** save code both to show as example, and to execute to generate the box
.ca start alert.ca
 .sp 2
 &indent
 .pu
 .lw 0
 .ta B b=1 4.25i
   .ta  b=0 .75i 3i
   .ep caution_tangle.eps x=0 l=.5i close proportional
   .cl 
   .sp .75
   &bold( CAUTION^: ) .br
   Reading too many tricks before dinner might spoil your appetite 
   for aardvark soup.
   .et
 .et
 .po
 &uindent
.ca end

.** save the example which may be pushed to next page (example, and im command MUST be in col 0)
.** we imbed the example first, then we execute it
.ca start alert_example.ca
&example_start
.im alert.ca
&example_end_fg(Code to generate an alert box.)
.ca end

.ca start alert_example2.ca
.im alert.ca 
.fg The Resulting alert box generated by the code in figure &alert_fig.
.sp
.ca end

.** finally the code to check for fit and push it off if needed.
.** we push them both off if there isn't enough room for the first
.gv remain
.if &_lremain 19 <
	.oe .im alert_example.ca .im alert_example2.ca
.ei
	.im alert_example.ca
	.gv remain
	.if &_iremain 3 <
		.oe .im alert_example2.ca
	.ei
		.im alert_example2.ca
	.fi
.fi

The image macro defined earlier can be used making this code easy to use in a document which will 
produce both postscript and HTML output.

.h2 Margin Icon
.ep caution_tangle.eps x=-.35i l=.25i proportional noadvy
If an alert box isn't needed, but an icon in the margin makes sense to draw the reader's attention to a 
certain section of the document, a combination of parameters on the encapsulated postscript command
can be used to accomplish this. 
As an example, the caution triangle has been placed next to this paragraph of text, and all that was 
required to do so was using the following line  immediately after the header:

&example_start
  .ep caution_tangle.eps x=-.35i l=.25i proportional noadvy
&example_end

Using a negative offset on the x parameter causes the image to be placed to the left of the left 
margin. 
The &cw(noadv) argument causes the y offset not to be advanced to the bottom of the image, so that 
the text which follows the encapsulated postscript command is placed along side of the image. 
Placing the image past the right margin requires computing the current line length, and adding a small 

.gv figure
.dv icon_rt_fig &_fig
amount as illustrated in figure &icon_rt_fig.
.sp .1

.gv rmar
.gv lmar
.dv offset [ &_rmar &_lmar - 10  + ]
.ep caution_tangle.eps x=&{offset}p l=.25i proportional noadvy

&example_start
 .gv rmar
 .gv lmar
 .dv offset [ &_rmar &_lmar - 10  + ]
 .ep caution_tangle.eps x=&{offset}p l=.25i proportional noadvy
&example_end_fg( Placing an icon on the right side.)

Remember that the right and left margin values returned by the get value &c(gv) command are in 
points (72/inch) and thus the offset is computed in points and must be suffixed with a trailing
'p' on the encapsulated postscript command.
.sp

Unlike merging an image next to text in a table, placing an image outside of the margins in an HTML 
document requires a bit more work and is beyond the scope of this document. 

.h2 Image Proportions
Encapsulated postscript images are automatically scaled based on the length (l=) parameter supplied 
on the command. 
This allows the same illustration, the warning symbol in the previous examples, to be used and scaled 
as is needed for the situation.  
The &ital( proportional ) parameter instructs &x to maintain the images proportions in both the x and y 
directions; if not supplied the image is limited by the length and width parameters and may
cause the image to be stretched in one direction.
