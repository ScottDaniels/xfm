
.cc 10
.h2 Tables
Tables are supported when generating PostScript, and HTML documents. The 
creation of a table is accomplished with several &x commands: &ital(table) &c(ta,)
&ital(cell) &c(cl,) &ital(table row) &c(tr,) and &ital(end table) &c(et.)

Information is placed into table cells from left to right. Formatting is done within 
the cell such that a cell may contain multiple lines, and &x will attempt to perform any
requested justification or other commands that exist in the source. 
Each time a &ital(cell) command is encountered, the current cell is 'terminated' and 
the next text tokens encountered are placed into the next cell to the right.
Depending on the output format, it may be necessary to insert at least a break command 
into each cell in order to generate the desired results. 

The following paragraphs describe each of these commands.

.h3 Starting a table
The &ital(table) &c(ta) command is used to start a table and defines the number of 
cells, cell sizes, border option, and other information to the formatter. 
The following is the syntax for the &ital(table) command:
.sp
.sf &cwfont
.st [ &textsize 2 - ]
.nf
 .ta [n] [[B] b=n] [a=align] [s=points]
     [p=points] [t=colour] [w=pctg]
     [center]
     width_1 width_2... width_n 
.fo
.sf &textfont
.st &textsize
.sp

Where:
&indent
.bd .75i &ditext
.di n : Causes &x to &bold(not) automatically set the first column parameters. 
When the &ital(n) keyword is used, the user must include a &ital(cell) command 
before the next text is encountered.
.sp .5
.di B : Force left and right borders. Off by default as current fashon is to generate
tables without edge borders, and allows for table nesting without double lines.
.sp  .5

.di b=n : Indicates the line width of the table border. Borders are the lines drawn
	between cells, rows, and at the left and right edges if the &cw( B ) option is
	also given.
	&cw(b=0) causes no borders to be drawn for the table; borders can be turned
	on beginning with any row by using the appropriate option on the table row (^.tr)
	command.
.sp .5

.di a=align : Supplies one of the alignment constants (right, left, center) and 
causes the table to be aligned in this manner when generating HTML output.
.sp .5

.di p=points : Defines the number of points that are to be used to indent text
from each 'cell wall.'
.sp .5

.di s=points : Defines the spacing between cells and rows that a browser is expected 
leave. 
.sp .5

.di t=colour : Specifies a text colour that is to be used for text in the table
(HFM only).
.sp .5

.di w=pctg : Supplies to &x a percentage (pct)  that will be used to set the 
width of an HTML table in terms of percent of the browser width. 
.sp .5

.di width_n : Are the cell width definitions (points or inches). When generating 
PostScript documents &x controls the width of each table sell directly, 
but only suggests the width of a cell when generating and HTML document. 
.sp .5

.di center : Causes the whole table to be centered between in the current column (pfm)
or as rendered with a &cw(<center>) tag in HTML.
.ed
&uindent

.sp

.h3 Next table cell
The cell command &c(cl) causes the next cell of a table to be selected and &x begins 
to place formatted text into that cell of the table. 
The cell command accepts several parameters and has the following syntax:
.sp
.sf &cwfont
.st [ &textsize 2 - ]
.nf
 .cl [c=bg] [t=fg] [s=span] [a=align] [v=valign]
.fo
.sf &textfont
.st &textsize

.ix force `background colour`
.sp
Where:
&indent 
.bd .75i &ditext
.di bg : Defines the colour that the background of the cell should be painted with.
Supported only in &cw(hfm.)
.sp
.di fg : Defines the colour that the text (foreground) in the cell will be painted with.
Supported only in &cw(hfm.)
.sp
.di span : Indicates the number of table columns that the cell is supposed to span.
.sp
.di align : Is a constant string (right, left, center) that defines the alignment of items 
placed into the cell. Supported only by &cw(hfm.)
.sp
.di valign : Is a constant string (top, bottom) that defines the vertical alignment of items
placed into the cell.
Supported only by &cw(hfm.)
.ed
&uindent
.sp

.h3 Next table row
The &ital(table row) &c(tr) command causes the current table row to be completed and the 
next row started. 
The command accepts parameters that allow the user to define a background colour for the 
entire row, as well as alignment information. 
The syntax of the &ital(table row) command is:
.sp
.sf &cwfont
.st [ &textsize 2 - ]
.nf
 .tr [n] [a=align] [b=n] [c=colour] 
    [l=lines] [r=required] [v=valign]
    [w=lwidth]
.fo
.sf &textfont
.st &textsize
.sp

Where:
&indent
.bd .75i &ditext
.di n : Indicates that the first cell in the next row should &bold(not) be automatically 
started. This allows the user to immediately follow the &ital(table row) command with a 
&ital(cell) command to override the row defaults for the first cell. 
.sp .3
.di a=align : Specifies one of the alignment keywords (right, center, left) which are placed 
into the HTML document and cause the text in each of the cells to align in this manner.
.sp .3
.di b=n : Enables borders to be turned on starting with the next row (both between cells and
between rows when n is 1. This may not be applicable when generating HTML.
.sp .3
.di c=colour : Allows the user to define a background colour for all cells in the row. 
This colour is overridden if the user specifies a colour on a cell command. 
.sp .3
.di l=lines : Causes multiple lines to be placed between the row being ended and the following row.
If not supplied one line is placed (l=1), and l=0 may be used to drop the line between the cells.
.sp .3
.di r=required : Is a number suffixed with 'i' (inches), 'p' (points), or 'L' (lines) that
indicates the amount of vertical space that is required for the next table row.  If there
isn't enough space in the current column, then a column eject is performed. 
.sp .3
.di w=n : Specifies the line width in integer point values. If 0 (zero) is specified, the 
thinnest possible line is generated.  
.sp .3
.di v=valign : Allows the user to supply the vertical alignment that the HTML browser 
should apply to the text palced in each cell. The &ital(valign) parameter should be 
one of: center, top, or bottom.
.ed
&uindent
.sp

.h3 Table header
The &ital( table header ) &c(th) command allows a header to be defined for the current table.
The header is placed into the table where the command is encountered, and again at the 
top of each column if the table must be continued across columns (pages).  
The &ital(table header) command accepts the necessary text and cell commands as parameters; 
these are the same commands which would normally be used to place a header in the table
and are only prefixed with the &ital( table header ) command as illustrated for a 
three column table below (split onto multiple lines for illustration).
.sp .5
.st [ &textsize 2 - ]
.sf &cwfont
.nf
  .th &bold(GEAR) .cl ^: &bold(REQ/OPT) 
      .cl ^: &bold(COMMENT)
.fo
.sf &textfont
.st &textsize
.sp 
It should be noted that the new cell &c(cl) command must have an escaped colon separating it from
the next token.  
This is because the table header command is similar to a define variable &c(dv) command and the
parameters to the command are being captured; the colon is meant to be captured and not intended
to end the table header command.

.h3 Ending a table
The &ital(end table) &c(et) command accepts no parameters, and simply causes the table to 
be terminated. 
.sp

